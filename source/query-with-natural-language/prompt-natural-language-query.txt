.. _prompt-natural-language-query:

========================================
Prompt your First Natural Language Query
========================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1

You can use MongoDB Compass to generate filter documents using the
natural language querying feature. This feature automatically generates 
filter documents based on prompts you provide to the MongoDB AI engine. 
Natural language querying serves as a helpful starting point and assists 
you in learning to write MongoDB queries.

About this Task
---------------

.. note::

   .. include:: /includes/fact-natural-language-query.rst

- The MongoDB AI engine can return both filter documents and 
  aggregations. If your prompt results in an aggregation, a pop-up menu
  directs you to the :guilabel:`Aggregations` tab.

- This page uses the :ref:`sample_mflix.movies <sample-mflix>` 
  collection from the Atlas sample dataset.

Before you Begin
----------------

You must :ref:`enable the natural language querying feature<enable-natural-language-querying>`.

Steps
-----

.. procedure::
   :style: connected

   .. step:: Navigate to the :guilabel:`Natural Language Query Bar`
      
      I. Select the :guilabel:`Documents` tab.
      #. Click the :guilabel:`Ask AI` button.

      The :guilabel:`Natural Language Query Bar` displays.

   .. step:: Type a question for your collection

      Type a natural language prompt for your collection into the query 
      bar. For example: ``Which movies were released in 2000?``

      I. Press enter or click :guilabel:`Generate`.
      #. A filter document populates in the :guilabel:`Filter` bar.

   .. step:: Run the query

      I. Before running the query, make sure to thoroughly review the 
         syntax in the :guilabel:`Filter` bar.
      #. Click the :guilabel:`Find` button to execute the query.

      The results populate in the documents view.

Example
-------

Below are examples of prompts to help you understand expected results 
when using Natural Language Querying. For more examples and best practices, 
see :ref:`natural-language-best-practices`.

.. list-table::
   :header-rows: 1
   :widths: 40 60

   * - Prompt
     - Response

   * - ``Which movies have a "PG" rating?``
     - .. code-block:: json
          :copyable: false

          {"rated": "PG"}

   * - ``Which movies include "David Mamet" in the writers array field?``
     - .. code-block:: json
          :copyable: false

          {"writers": "David Mamet"}

   * - ``Which movies start with the letter "G"?``
     - .. code-block:: json
          :copyable: false

          {"title": {"$regex": "^G", "$options": "i"}}

Next Steps
----------

:ref:`prompt-natural-language-agg`

Learn More
----------

:ref:`query-natural-language`