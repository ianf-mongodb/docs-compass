.. _prompt-natural-language-query:

========================================
Prompt your First Natural Language Query
========================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1

You can use MongoDB Compass to generate filter documents by using the 
natural language querying feature. Natural language querying can be used
to generate filter documents automatically based on prompts you provide 
to the MongoDB AI engine. Natural language querying is useful as an 
initial starting point and can help write MongoDB queries. 

For full details on Natural Language Querying, see 
:ref:`query-natural-language`.

About this Task
---------------

The MongoDB AI engine can return both filter documents and 
aggregations. If your prompt results in an aggregation, a popup
appears directing you to the :guilabel:`Aggregations` tab.

Before you Begin
----------------

You must :ref:`enable the natural language querying feature<enable-natural-language-querying>`.

Steps
-----

.. procedure::
   :style:  connected

   .. step:: Navigate to the Documents tab.

   .. step:: Click the :guilabel:`Ask AI` button.

      The :guilabel:`Natural Language Query Bar` appears.

   .. step:: Type a natural language prompt for your collection.
   
      For example using the ``movies`` collection in the sample Mflix 
      data set, a natural language prompt could be:
      ``Which movies were released in 2000?``.

   .. step:: Press enter or click :guilabel:`Generate`.

      A filter document is populated in the :guilabel:`Filter` bar.

   .. step:: Carefully examine the filter document.
     
      The query provided by the MongoDB AI engine is not automatically 
      run once generated. Carefully review the syntax before you run 
      the query.

   .. step:: Click the :guilabel:`Find` button to execute the query.
     
      The results are populated in the documents view.

Example
-------

Below are examples of prompts to help you understand results when 
using Natural Language Querying. For more examples and best practices, see
:ref:`natural-language-best-practices`.

.. list-table::
   :header-rows: 1
   :widths: 20 50 30

   * - Namespace
     - Prompt
     - Response

   * - sample_mflix.movies
     - ``Which movies have a "PG" rating?``
     - .. code-block:: json
          
          {"rated": "PG"}

   * - sample_mflix.movies
     - ``Which movies include a writer of "David Mamet"?``
     - .. code-block:: json
          
          {"writers": "David Mamet"}

   * - sample_mflix.movies
     - ``How many movies start with the letter "G"?``
     - .. code-block:: json
          
          {"title": /^G/i}

Next Steps
----------

:ref:`prompt-natural-language-agg`

Learn More
----------

:ref:`query-natural-language`